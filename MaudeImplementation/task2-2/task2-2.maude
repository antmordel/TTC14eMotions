
fmod 2-TUPLE is
  pr NAT .
  sort Tuple .
  op <(_,_)> : Nat Nat -> Tuple .
  
endfm

view 2-Tuple from TRIV to 2-TUPLE is  
    sort Elt to Tuple .  
endv

fmod MAYBE{X :: TRIV} is
  sort Maybe{X} .
  subsort X$Elt < Maybe{X} .
  op null : -> Maybe{X} .
endfm

view Object from TRIV to CONFIGURATION is
  sort Elt to Object .
endv

mod TASK2-2 is
  pr TASK1 .
  pr SET{2-Tuple} .
  pr MAYBE{Object} .
  
  op findCouples : -> Msg [ctor] .
  
  op {_}{_}{_}{_}{_}{_} : Configuration Configuration Configuration Configuration Maybe{Object} Set{2-Tuple} -> Set{2-Tuple} .
  ---- starting argument
  ---- persons
  ---- movies 
  ---- persons dealt
  ---- fixed person on which we iterate
  ---- set of pairs as result
  op {_} : Configuration -> Set{2-Tuple} .
  
  ************
  **** Vars
  ************
  var Conf C1 C2 C3 C4 : Configuration .
  vars O O1 O2 O3 : Nat .
  vars Atts Atts1 Atts2 Atts3 : AttributeSet .
  var V@Person : Person .
  var MS1 MS2 : Set{Nat} .
  var TS : Set{2-Tuple} .
  
  rl [create5Tuple] :
    { findCouples Conf }
  =>
    { Conf }{ none }{ none }{ none }{ null }{ empty } .
    
    
  ---------------------------------------------------------------------------------
  ---- 1st step: We split Persons and Movies into their configurations
  --------------------------------------------------------------------------------- 
    
  rl [splitPersons] :
    { < O : V@Person | Atts >  Conf }
    { C2 }{ C3 }{ none }{ null }{ empty }
  => 
    { Conf }{ < O : V@Person | Atts >  C2 }
    { C3 }{ none }{ null }{ empty } .
  
  rl [splitMovies] :
    { < O : Movie | Atts >  Conf }
    { C2 }{ C3 }{ none }{ null }{ empty }
  => 
    { Conf }{ C2 }
    { < O : Movie | Atts > C3 }{ none }{ null }{ empty } .
  
  rl [splitMessages] :
    { M:Msg Conf }
    { C2 }{ C3 }{ none }{ null }{ empty }
  => 
    { Conf }{ C2 }{ C3 }{ none }{ null }{ empty } .
    
  ---------------------------------------------------------------------------------
  ---- 2nd step: We fix an actor or actress
  ---------------------------------------------------------------------------------
  
  rl [fixingPerson] : 
    { none }{ < O : V@Person | Atts > C1 }{ C2 }{ none }{ null }{ TS } 
  => 
    { none }{ C1 }{ C2 }{ none }{ < O : V@Person | Atts > }{ TS } .

  ---------------------------------------------------------------------------------
  ---- 3rd step:
  --------------------------------------------------------------------------------- 
  
  rl [doingPairs] :
    { none }{ < O1 : V@Person | Atts1 >  C1 }{ C2 }{ C3 }{ < O2 : Person | Atts2 > }{ TS } 
  => 
    if hay una movie que tenga a O1 y O2 como actores 
        then { none } { C1 } { C2 } { < O1 : Person | Atts1 > C3 } { < O : Person | Atts > } { < O1 ; O2 > TS }
        else { none } { C1 } { C2 } { < O1 : Person | Atts1 > C3 } { < O : Person | Atts > } { TS }
  
endm

rew in TASK2-2 : { findCouples freshOid(40) < 0 : Movie | rating : 0.0 > < 1 : Movie | rating :
    1.0 > < 2 : Movie | rating : 2.0 > < 3 : Movie | rating : 3.0 > < 4 : Movie | rating
    : 4.0 > < 5 : Actor | name : "a0",movies : (0, 1, 2, 3) > < 6 : Actor | name : "a1",
    movies : (0, 1, 2) > < 7 : Actor | name : "a2",movies : (1, 2, 3) > < 8 : Actor |
    name : "a3",movies : (1, 2, 3, 4) > < 9 : Actor | name : "a4",movies : (1, 2, 3, 4) >
    < 10 : Movie | rating : 5.0 > < 11 : Movie | rating : 6.0 > < 12 : Movie | rating :
    7.0 > < 13 : Movie | rating : 8.0 > < 14 : Movie | rating : 9.0 > < 15 : Actor | name
    : "a5",movies : (10, 11) > < 16 : Actor | name : "a6",movies : (10, 11, 12) > < 17 :
    Actor | name : "a7",movies : (11, 12, 13) > < 18 : Actor | name : "a8",movies : (12,
    13, 14) > < 19 : Actor | name : "a9",movies : (13, 14) > < 20 : Movie | rating :
    1.0e+1 > < 21 : Movie | rating : 1.1e+1 > < 22 : Movie | rating : 1.2e+1 > < 23 :
    Movie | rating : 1.3e+1 > < 24 : Movie | rating : 1.4e+1 > < 25 : Actor | name :
    "a10",movies : (20, 21, 22, 23) > < 26 : Actor | name : "a11",movies : (20, 21, 22) >
    < 27 : Actor | name : "a12",movies : (21, 22, 23) > < 28 : Actor | name : "a13",
    movies : (21, 22, 23, 24) > < 29 : Actor | name : "a14",movies : (21, 22, 23, 24) > <
    30 : Movie | rating : 1.5e+1 > < 31 : Movie | rating : 1.6e+1 > < 32 : Movie | rating
    : 1.7e+1 > < 33 : Movie | rating : 1.8e+1 > < 34 : Movie | rating : 1.9e+1 > < 35 :
    Actor | name : "a15",movies : (30, 31) > < 36 : Actor | name : "a16",movies : (30,
    31, 32) > < 37 : Actor | name : "a17",movies : (31, 32, 33) > < 38 : Actor | name :
    "a18",movies : (32, 33, 34) > < 39 : Actor | name : "a19",movies : (33, 34) > } .
