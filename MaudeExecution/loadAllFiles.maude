---- cd ../workspaceEmotionsPalladio/TTC14eMotions/MaudeExecution

---- set print attribute on .
---- set trace on .
---- set trace rl on .
---- set trace eq off .
---- set trace rewrite off .
---- set trace body off .
---- set trace substitution off .

load CommonFiles/mOdCL.maude
load CommonFiles/model-checker.maude
load CommonFiles/MGDefinitions.maude
load CommonFiles/MGRealTimeMaude24.maude
load CommonFiles/EcoreMM.maude
load CommonFiles/e-Motions.maude

load parameterwoven.ecore.maude
----load task1.behavior.maude

load task2.behavior.maude
load out2.xmi.maude

---- set print conceal on .
---- print conceal <_:_|_> __ .

mod EJECUCION is
  ---op edfEmptyModel : -> @Model
  ---.
  ---eq edfEmptyModel =
  ---  _`{_`}( @edf@ , none )
  ---.

 ***(
  op edfModel : -> @Model
  .
  eq edfModel =  
  @edf@{ < 'P : Processor@edf | executes@Processor@edf : null > 
    < 'S1 : Server@edf | period@Server@edf : 8 #
    execTime@Server@edf : 4 # deadline@Server@edf : 8 # remExecTime@Server@edf
    : 4 # history@Server@edf : Sequence{mt-ord} > < 'S2 : Server@edf |
    period@Server@edf : 5 # execTime@Server@edf : 2 # deadline@Server@edf : 5 #
    remExecTime@Server@edf : 2 # history@Server@edf : Sequence{mt-ord} > < 'S3 :
    Server@edf | period@Server@edf : 10 # execTime@Server@edf : 4 #
    deadline@Server@edf : 10 # remExecTime@Server@edf : 4 # history@Server@edf
    : Sequence{mt-ord} > } .
  )
  
  protecting @MOVIES@BEHAVIOR@
  .
    protecting OUT2 .

  var T TE : Time .
  var MODEL : @Model .
---(
  crl [tick] : 
        { MODEL } in time T 
      => 
        { delta(MODEL, TE) } in time (T plus TE) 
    if TE := mte(MODEL) 
       /\ TE =/= zero  
       /\ (T plus TE) le 0 .
)
 
op result1 : -> Set{@Object} .



op s : -> Vid .
endm

---Simulation
rew init(out2) .

set print conceal off .

