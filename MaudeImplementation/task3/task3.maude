
mod TASK3 is
  pr TASK1 .
  
  op couplesCalculated : Set{Nat} -> Msg [ctor] .
  
  op {_} : Configuration -> Configuration [ctor] .
  
  op sumAllRatings : Set{Nat} Configuration -> Float .
  
  var C : Configuration . var MovieSet Couples : Set{Nat} .
  var Atts1 : AttributeSet . var N : Float . var M : Nat . 
  
  crl [avgRating] :
    { < M : Couple | commonMovies : MovieSet, avgRating : 0.0, Atts1 >
      couplesCalculated((Couples)) C 
    }
  =>
    { < M : Couple | commonMovies : MovieSet, avgRating : (sumAllRatings(MovieSet, C) / float(| MovieSet |)), Atts1 >
      couplesCalculated((M, Couples)) C
    }
  if not(M in Couples) .
  
  eq sumAllRatings(empty, C) = 0.0 .
  eq sumAllRatings((M, MovieSet), 
                   < M : Movie | rating : N, Atts1 > C )
    = N + sumAllRatings((MovieSet), < M : Movie | rating : N, Atts1 > C ) .

endm

eof